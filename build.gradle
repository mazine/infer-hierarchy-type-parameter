buildscript {
    ext.kotlin_version = '1.3.10'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.5.3"
    }
}

// To deploy new version use
// 1. `./gradlew -Prelease=1.3.0  uploadArchives closeAndPromoteRepository`
// 2. Go to https://oss.sonatype.org/#stagingRepositories
// 3. Check https://search.maven.org/#search%7Cgav%7C1%7Cg%3A%22com.github.mazine%22%20AND%20a%3A%22infer-hierarchy-type-parameter%22

version = project.hasProperty('release') && project.release != null && project.release.length() > 0 ? project.release : '1.0-SNAPSHOT'
group = 'com.github.mazine'

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'idea'
apply plugin: 'io.codearte.nexus-staging'


task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

idea {
    project {
        jdkName = '1.8'
        vcs = 'Git'
    }
    module {
        downloadSources = true
    }
}

artifacts {
    archives jar
    archives sourcesJar
}

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    testCompile 'com.google.truth:truth:0.31'
    testCompile 'junit:junit:4.12'
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
}


if (project.hasProperty('release')) {
    artifacts {
        archives sourcesJar, javadocJar
    }

    apply plugin: 'signing'
    apply plugin: 'maven'

    // Signature of artifacts
    signing {
        sign configurations.archives
    }

    // OSSRH publication
    uploadArchives {
        repositories {
            mavenDeployer {
                // POM signature
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
                // Target repository
                if (project.version.endsWith('-SNAPSHOT')) {
                    repository(url: "https://oss.sonatype.org/content/repositories/snapshots") {
                        authentication(userName: ossrhUser, password: ossrhPassword)
                    }
                } else {
                    repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2") {
                        authentication(userName: ossrhUser, password: ossrhPassword)
                    }
                }
                pom.project {
                    name project.name
                    description project.description
                    packaging 'jar'
                    url 'https://github.com/mazine/infer-hierarchy-type-parameter'

                    scm {
                        connection 'scm:git:https://github.com/mazine/infer-hierarchy-type-parameter.git'
                        developerConnection 'scm:git:git@github.com:mazine/infer-hierarchy-type-parameter.git'
                        url 'https://github.com/mazine/infer-hierarchy-type-parameter'
                    }

                    licenses {
                        license {
                            name 'Apache 2.0'
                            url 'http://www.apache.org/licenses/'
                            distribution 'repo'
                        }
                    }

                    developers {
                        developer {
                            id = 'mazine'
                            name = 'Maxim Mazin'
                            email = 'maxim.mazin@gmail.com'
                        }
                    }
                }
            }
        }
    }

    nexusStaging {
        username = ossrhUser
        password = ossrhPassword
    }
}